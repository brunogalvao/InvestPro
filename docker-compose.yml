version: '3.8'

services:
  # Banco de dados Postgres
  postgres:
    image: postgres:16-alpine
    container_name: investpro-postgres
    environment:
      - POSTGRES_USER=investpro
      - POSTGRES_PASSWORD=investpro
      - POSTGRES_DB=investpro
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U investpro -d investpro"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache das traduções
  redis:
    image: redis:7-alpine
    container_name: investpro-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API de traduções i18n
  i18n-api:
    build:
      context: ./i18n-api
      dockerfile: Dockerfile
    container_name: investpro-i18n-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - PORT=3000
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React (opcional - para desenvolvimento)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: investpro-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_I18N_API_URL=http://localhost:3000
    depends_on:
      i18n-api:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

  # API de contas (CRUD + Auth)
  account-api:
    build:
      context: ./account-api
      dockerfile: Dockerfile
    container_name: investpro-account-api
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DATABASE_URL=postgres://investpro:investpro@postgres:5432/investpro
      - BCRYPT_SALT_ROUNDS=10
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  default:
    name: investpro-network
